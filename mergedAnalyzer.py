# coding=utf-8
from __future__ import print_function

DFA = {
    "FinalStates": {
        "T1": "WHITESPACE",
        "T2": "WHITESPACE",
        "T3": "WHITESPACE",
        "T4": "WHITESPACE",
        "T5": "WHITESPACE",
        "T6": "WHITESPACE",
        "T7": "INTEGER",
        "T8": "OP",
        "T9": "INTEGER",
        "T10": "INTEGER",
        "T12": "STRING",
        "T16": "ID",
        "T17": "ID",
        "T18": "ID",
        "T19": "OP",
        "T21": "OP",
        "T22": "OP",
        "T23": "VTYPE",
        "T24": "VTYPE",
        "T25": "COMPARISON",
        "T26": "COMPARISON",
        "T27": "COMPARISON",
        "T28": "COMPARISON",
        "T29": "COMPARISON",
        "T30": "COMPARISON",
        "T31": "COMMA",
        "T32": "SEMI",
        "T33": "ASSIGN",
        "T34": "IF",
        "T35": "ELSE",
        "T36": "WHILE",
        "T37": "RETURN",
        "T38": "LBRACE",
        "T39": "RBRACE",
        "T40": "LPAREN",
        "T41": "RPAREN",
    },
    "Table": {
        "T0": {"0": "T10", "1": "T7", "2": "T7", "3": "T7", "4": "T7", "5": "T7", "6": "T7", "7": "T7", "8": "T7",
               "9": "T7", "a": "T16", "b": "T16", "c": "T16", "d": "T16", "e": "T16", "f": "T16", "g": "T16",
               "h": "T16",
               "i": "T16", "j": "T16", "k": "T16", "l": "T16", "m": "T16", "n": "T16", "o": "T16", "p": "T16",
               "q": "T16", "r": "T16", "s": "T16", "t": "T16", "u": "T16", "v": "T16", "w": "T16", "x": "T16",
               "y": "T16", "z": "T16", "A": "T16", "B": "T16", "C": "T16", "D": "T16", "E": "T16", "F": "T16",
               "G": "T16", "H": "T16",
               "I": "T16", "J": "T16", "K": "T16", "L": "T16", "M": "T16", "N": "T16", "O": "T16", "P": "T16",
               "Q": "T16", "R": "T16", "S": "T16",
               "T": "T16", "U": "T16", "V": "T16", "W": "T16", "X": "T16", "Y": "T16", "Z": "T16", "+": "T19",
               "-": "T8", "*": "T21", "/": "T22",
               ",": "T31", ";": "T32", "<": "T25", ">": "T26", "<=": "T29", ">=": "T30", "==": "T27", "!=": "T28",
               "(": "T40", ")": "T41", "{": "T38",
               "}": "T39", "=": "T33", "if": "T34", "else": "T35", "while": "T36", "return": "T37", " ": "T3",
               "\n": "T2", "\t": "T1",
               "int": "T23", "char": "T24", "\"": "T11"},
        "T1": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
               "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
               "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
               "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
               "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
               "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
               ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
               "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "T6", "\n": "T5", "\t": "T4",
               "int": "", "char": "", "\"": ""},
        "T2": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
               "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
               "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
               "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
               "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
               "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
               ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
               "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "T6", "\n": "T5", "\t": "T4",
               "int": "", "char": "", "\"": ""},
        "T3": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
               "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
               "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
               "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
               "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
               "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
               ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
               "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "T6", "\n": "T5", "\t": "T4",
               "int": "", "char": "", "\"": ""},
        "T4": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
               "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
               "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
               "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
               "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
               "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
               ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
               "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "T6", "\n": "T5", "\t": "T4",
               "int": "", "char": "", "\"": ""},
        "T5": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
               "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
               "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
               "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
               "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
               "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
               ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
               "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "T6", "\n": "T5", "\t": "T4",
               "int": "", "char": "", "\"": ""},
        "T6": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
               "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
               "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
               "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
               "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
               "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
               ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
               "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "T6", "\n": "T5", "\t": "T4",
               "int": "", "char": "", "\"": ""},
        "T7": {"0": "T9", "1": "T9", "2": "T9", "3": "T9", "4": "T9", "5": "T9", "6": "T9", "7": "T9", "8": "T9",
               "9": "T9", "a": "",
               "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
               "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
               "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
               "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
               "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
               ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
               "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
               "int": "", "char": "", "\"": ""},
        "T8": {"0": "", "1": "T7", "2": "T7", "3": "T7", "4": "T7", "5": "T7", "6": "T7", "7": "T7", "8": "T7",
               "9": "T7", "a": "",
               "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
               "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
               "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
               "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
               "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
               ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
               "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
               "int": "", "char": "", "\"": ""},
        "T9": {"0": "T9", "1": "T9", "2": "T9", "3": "T9", "4": "T9", "5": "T9", "6": "T9", "7": "T9", "8": "T9",
               "9": "T9", "a": "",
               "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
               "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
               "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
               "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
               "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
               ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
               "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
               "int": "", "char": "", "\"": ""},
        "T10": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T11": {"0": "T14", "1": "T14", "2": "T14", "3": "T14", "4": "T14", "5": "T14", "6": "T14", "7": "T14",
                "8": "T14", "9": "T14", "a": "T13",
                "b": "T13", "c": "T13", "d": "T13", "e": "T13", "f": "T13", "g": "T13", "h": "T13", "i": "T13",
                "j": "T13", "k": "T13", "l": "T13",
                "m": "T13", "n": "T13", "o": "T13", "p": "T13", "q": "T13", "r": "T13", "s": "T13", "t": "T13",
                "u": "T13", "v": "T13", "w": "T13",
                "x": "T13", "y": "T13", "z": "T13", "A": "T13", "B": "T13", "C": "T13", "D": "T13", "E": "T13",
                "F": "T13", "G": "T13", "H": "T13",
                "I": "T13", "J": "T13", "K": "T13", "L": "T13", "M": "T13", "N": "T13", "O": "T13", "P": "T13",
                "Q": "T13", "R": "T13", "S": "T13",
                "T": "T13", "U": "T13", "V": "T13", "W": "T13", "X": "T13", "Y": "T13", "Z": "T13", "+": "", "-": "",
                "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "T15", "\n": "", "\t": "",
                "int": "", "char": "", "\"": "T12"},
        "T12": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T13": {"0": "T14", "1": "T14", "2": "T14", "3": "T14", "4": "T14", "5": "T14", "6": "T14", "7": "T14",
                "8": "T14", "9": "T14", "a": "T13",
                "b": "T13", "c": "T13", "d": "T13", "e": "T13", "f": "T13", "g": "T13", "h": "T13", "i": "T13",
                "j": "T13", "k": "T13", "l": "T13",
                "m": "T13", "n": "T13", "o": "T13", "p": "T13", "q": "T13", "r": "T13", "s": "T13", "t": "T13",
                "u": "T13", "v": "T13", "w": "T13",
                "x": "T13", "y": "T13", "z": "T13", "A": "T13", "B": "T13", "C": "T13", "D": "T13", "E": "T13",
                "F": "T13", "G": "T13", "H": "T13",
                "I": "T13", "J": "T13", "K": "T13", "L": "T13", "M": "T13", "N": "T13", "O": "T13", "P": "T13",
                "Q": "T13", "R": "T13", "S": "T13",
                "T": "T13", "U": "T13", "V": "T13", "W": "T13", "X": "T13", "Y": "T13", "Z": "T13", "+": "", "-": "",
                "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "T15", "\n": "", "\t": "",
                "int": "", "char": "", "\"": "T12"},
        "T14": {"0": "T14", "1": "T14", "2": "T14", "3": "T14", "4": "T14", "5": "T14", "6": "T14", "7": "T14",
                "8": "T14", "9": "T14", "a": "T13",
                "b": "T13", "c": "T13", "d": "T13", "e": "T13", "f": "T13", "g": "T13", "h": "T13", "i": "T13",
                "j": "T13", "k": "T13", "l": "T13",
                "m": "T13", "n": "T13", "o": "T13", "p": "T13", "q": "T13", "r": "T13", "s": "T13", "t": "T13",
                "u": "T13", "v": "T13", "w": "T13",
                "x": "T13", "y": "T13", "z": "T13", "A": "T13", "B": "T13", "C": "T13", "D": "T13", "E": "T13",
                "F": "T13", "G": "T13", "H": "T13",
                "I": "T13", "J": "T13", "K": "T13", "L": "T13", "M": "T13", "N": "T13", "O": "T13", "P": "T13",
                "Q": "T13", "R": "T13", "S": "T13",
                "T": "T13", "U": "T13", "V": "T13", "W": "T13", "X": "T13", "Y": "T13", "Z": "T13", "+": "", "-": "",
                "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "T15", "\n": "", "\t": "",
                "int": "", "char": "", "\"": "T12"},
        "T15": {"0": "T14", "1": "T14", "2": "T14", "3": "T14", "4": "T14", "5": "T14", "6": "T14", "7": "T14",
                "8": "T14", "9": "T14", "a": "T13",
                "b": "T13", "c": "T13", "d": "T13", "e": "T13", "f": "T13", "g": "T13", "h": "T13", "i": "T13",
                "j": "T13", "k": "T13", "l": "T13",
                "m": "T13", "n": "T13", "o": "T13", "p": "T13", "q": "T13", "r": "T13", "s": "T13", "t": "T13",
                "u": "T13", "v": "T13", "w": "T13",
                "x": "T13", "y": "T13", "z": "T13", "A": "T13", "B": "T13", "C": "T13", "D": "T13", "E": "T13",
                "F": "T13", "G": "T13", "H": "T13",
                "I": "T13", "J": "T13", "K": "T13", "L": "T13", "M": "T13", "N": "T13", "O": "T13", "P": "T13",
                "Q": "T13", "R": "T13", "S": "T13",
                "T": "T13", "U": "T13", "V": "T13", "W": "T13", "X": "T13", "Y": "T13", "Z": "T13", "+": "", "-": "",
                "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "T15", "\n": "", "\t": "",
                "int": "", "char": "", "\"": "T12"},
        "T16": {"0": "T18", "1": "T18", "2": "T18", "3": "T18", "4": "T18", "5": "T18", "6": "T18", "7": "T18",
                "8": "T18", "9": "T18", "a": "T17",
                "b": "T17", "c": "T17", "d": "T17", "e": "T17", "f": "T17", "g": "T17", "h": "T17", "i": "T17",
                "j": "T17", "k": "T17", "l": "T17",
                "m": "T17", "n": "T17", "o": "T17", "p": "T17", "q": "T17", "r": "T17", "s": "T17", "t": "T17",
                "u": "T17", "v": "T17", "w": "T17",
                "x": "T17", "y": "T17", "z": "T17", "A": "T17", "B": "T17", "C": "T17", "D": "T17", "E": "T17",
                "F": "T17", "G": "T17", "H": "T17",
                "I": "T17", "J": "T17", "K": "T17", "L": "T17", "M": "T17", "N": "T17", "O": "T17", "P": "T17",
                "Q": "T17", "R": "T17", "S": "T17",
                "T": "T17", "U": "T17", "V": "T17", "W": "T17", "X": "T17", "Y": "T17", "Z": "T17", "+": "", "-": "",
                "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T17": {"0": "T18", "1": "T18", "2": "T18", "3": "T18", "4": "T18", "5": "T18", "6": "T18", "7": "T18",
                "8": "T18", "9": "T18", "a": "T17",
                "b": "T17", "c": "T17", "d": "T17", "e": "T17", "f": "T17", "g": "T17", "h": "T17", "i": "T17",
                "j": "T17", "k": "T17", "l": "T17",
                "m": "T17", "n": "T17", "o": "T17", "p": "T17", "q": "T17", "r": "T17", "s": "T17", "t": "T17",
                "u": "T17", "v": "T17", "w": "T17",
                "x": "T17", "y": "T17", "z": "T17", "A": "T17", "B": "T17", "C": "T17", "D": "T17", "E": "T17",
                "F": "T17", "G": "T17", "H": "T17",
                "I": "T17", "J": "T17", "K": "T17", "L": "T17", "M": "T17", "N": "T17", "O": "T17", "P": "T17",
                "Q": "T17", "R": "T17", "S": "T17",
                "T": "T17", "U": "T17", "V": "T17", "W": "T17", "X": "T17", "Y": "T17", "Z": "T17", "+": "", "-": "",
                "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T18": {"0": "T18", "1": "T18", "2": "T18", "3": "T18", "4": "T18", "5": "T18", "6": "T18", "7": "T18",
                "8": "T18", "9": "T18", "a": "T17",
                "b": "T17", "c": "T17", "d": "T17", "e": "T17", "f": "T17", "g": "T17", "h": "T17", "i": "T17",
                "j": "T17", "k": "T17", "l": "T17",
                "m": "T17", "n": "T17", "o": "T17", "p": "T17", "q": "T17", "r": "T17", "s": "T17", "t": "T17",
                "u": "T17", "v": "T17", "w": "T17",
                "x": "T17", "y": "T17", "z": "T17", "A": "T17", "B": "T17", "C": "T17", "D": "T17", "E": "T17",
                "F": "T17", "G": "T17", "H": "T17",
                "I": "T17", "J": "T17", "K": "T17", "L": "T17", "M": "T17", "N": "T17", "O": "T17", "P": "T17",
                "Q": "T17", "R": "T17", "S": "T17",
                "T": "T17", "U": "T17", "V": "T17", "W": "T17", "X": "T17", "Y": "T17", "Z": "T17", "+": "", "-": "",
                "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T19": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T20": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T21": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T22": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T23": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T24": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T25": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T26": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T27": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T28": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T29": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T30": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T31": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T32": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T33": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T34": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T35": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T36": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T37": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T38": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T39": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T40": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},
        "T41": {"0": "", "1": "", "2": "", "3": "", "4": "", "5": "", "6": "", "7": "", "8": "", "9": "", "a": "",
                "b": "", "c": "", "d": "", "e": "", "f": "", "g": "", "h": "", "i": "", "j": "", "k": "", "l": "",
                "m": "", "n": "", "o": "", "p": "", "q": "", "r": "", "s": "", "t": "", "u": "", "v": "", "w": "",
                "x": "", "y": "", "z": "", "A": "", "B": "", "C": "", "D": "", "E": "", "F": "", "G": "", "H": "",
                "I": "", "J": "", "K": "", "L": "", "M": "", "N": "", "O": "", "P": "", "Q": "", "R": "", "S": "",
                "T": "", "U": "", "V": "", "W": "", "X": "", "Y": "", "Z": "", "+": "", "-": "", "*": "", "/": "",
                ",": "", ";": "", "<": "", ">": "", "<=": "", ">=": "", "==": "", "!=": "", "(": "", ")": "", "{": "",
                "}": "", "=": "", "if": "", "else": "", "while": "", "return": "", " ": "", "\n": "", "\t": "",
                "int": "", "char": "", "\"": ""},

    }
}

SLR_TABLE = {
    "ACCEPTED_STATES": {
        "T1": "",
        "T2": "",
        "T3": "",
        "T4": "",
        "T5": "",
        "T6": "",
        "T7": "",
        "T8": "",
        "T9": "",
        "T10": "",
        "T11": "",
        "T12": "",
        "T13": "",
        "T14": "",
        "T15": "",
        "T16": "",
        "T17": "",
        "T18": "",
        "T19": "",
        "T20": "",
        "T21": "",
        "T22": "",
        "T23": "",
        "T24": "",
        "T25": "",
        "T26": "",
        "T27": "",
        "T28": "",
        "T29": "",
        "T30": "",
        "T31": "",
        "T32": "",
        "T33": "",
        "T34": "",
        "T35": "",
        "T36": "",
        "T37": "",
        "T38": "",
        "T39": "",
        "T40": "",
        "T41": "",
        "T42": "",
        "T43": "",
        "T44": "",
        "T45": "",
        "T46": "",
        "T47": "",
        "T48": "",
        "T49": "",
        "T50": "",
        "T51": "",
        "T52": "",
        "T53": "",
        "T54": "",
        "T55": "",
        "T56": "",
        "T57": "",
        "T58": "",
        "T59": "",
        "T60": "",
        "T61": "",
        "T62": "",
        "T63": "",
        "T64": "",
        "T65": "",
        "T66": "",
        "T67": "",
        "T68": ""
    },
    "TRANSITION": {
        "T1": {"vtype": "S3", "id": "", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "2", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T2": {"vtype": "S6", "id": "", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "R3", "CODE": "4", "VDECL": "2", "FDECL": "5", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T3": {"vtype": "", "id": "S7", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T4": {"vtype": "", "id": "", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "R1", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T5": {"vtype": "S6", "id": "", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "R3", "CODE": "", "VDECL": "8", "FDECL": "2", "ARG": "5", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T6": {"vtype": "", "id": "S9", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T7": {"vtype": "", "id": "", "semi": "S10", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T8": {"vtype": "", "id": "", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "R2", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T9": {"vtype": "", "id": "", "semi": "S10", "lparen": "S11", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T10": {"vtype": "R4", "id": "R4", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "R4", "comma": "",
               "assign": "", "if": "R4", "else": "", "while": "R4", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "R4", "$": "R4", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T11": {"vtype": "S13", "id": "", "semi": "", "lparen": "", "rparen": "R7", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "12", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T12": {"vtype": "", "id": "", "semi": "", "lparen": "", "rparen": "S14", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T13": {"vtype": "", "id": "S15", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T14": {"vtype": "", "id": "", "semi": "", "lparen": "", "rparen": "", "lbrace": "S16", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T15": {"vtype": "", "id": "", "semi": "", "lparen": "", "rparen": "R9", "lbrace": "", "rbrace": "", "comma": "S18",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "17",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T16": {"vtype": "S3", "id": "S22", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "R11", "comma": "",
               "assign": "", "if": "S23", "else": "", "while": "S24", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "R11", "$": "", "CODE": "", "VDECL": "21", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "19", "STMT": "20", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T17": {"vtype": "", "id": "", "semi": "", "lparen": "", "rparen": "R6", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T18": {"vtype": "S25", "id": "", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T19": {"vtype": "", "id": "", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "S27", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": "26"},

        "T20": {"vtype": "S3", "id": "S22", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "R11", "comma": "",
               "assign": "", "if": "S23", "else": "", "while": "S24", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "R11", "$": "", "CODE": "", "VDECL": "", "FDECL": "21", "ARG": "", "MOREARGS": "",
               "BLOCK": "28", "STMT": "20", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T21": {"vtype": "R12", "id": "R12", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "R12", "comma": "",
               "assign": "", "if": "R12", "else": "", "while": "R12", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "R12", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T22": {"vtype": "", "id": "", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "S29", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T23": {"vtype": "", "id": "", "semi": "", "lparen": "S30", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T24": {"vtype": "", "id": "", "semi": "", "lparen": "S31", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T25": {"vtype": "", "id": "S32", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T26": {"vtype": "", "id": "", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "S33", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T27": {"vtype": "", "id": "S36", "semi": "", "lparen": "S35", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "S37",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "34", "COND": "", "RETURN": ""},

        "T28": {"vtype": "", "id": "", "semi": "", "lparen": "", "rparen": "", "lbrace": "", "rbrace": "R10", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "", "addsub": "", "multdiv": "", "num": "",
               "comp": "", "return": "R10", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "", "EXPR": "", "TERM": "", "FACTOR": "", "COND": "", "RETURN": ""},

        "T29": {"vtype": "", "id": "S36", "semi": "", "lparen": "S35", "rparen": "", "lbrace": "", "rbrace": "", "comma": "",
               "assign": "", "if": "", "else": "", "while": "", "literal": "S40", "addsub": "", "multdiv": "", "num": "S37",
               "comp": "", "return": "", "$": "", "CODE": "", "VDECL": "", "FDECL": "", "ARG": "", "MOREARGS": "",
               "BLOCK": "", "STMT": "", "RHS": "38", "EXPR": "39", "TERM": "41", "FACTOR": "42", "COND": "", "RETURN": ""},

    }
}

ReduceLengthList = []
ReduceStringList = []


class LexicalAnalyzer:

    def __init__(self):
        self.table = {}  # Transition Table 초기화
        self.currentState = "T0"  # 처음 state를 T0로 선언
        self.finalStates = {}  # Final State 선언

    def SetTransitionTable(self, dfa):  # Transition Table 세팅
        self.table = dfa["Table"]
        self.finalStates.update(dfa["FinalStates"])

    def CheckNextState(self, _input):  # 다음 state를 check
        if not _input in self.table[self.currentState]:  # 만약 테이블 값에 없는 input 값이 들어오면 에러 반환 후 종료
            print("error")
            exit()
        nextState = self.table[self.currentState][_input]
        if nextState == "":  # 다음 state가 rejected 상태이면 "rejected" 반환
            return "rejected"
        else:  # 나머지 경우에는 nextState 반환
            return nextState

    def GetState(self):  # 현재 state를 알려줌
        return self.currentState

    def SetState(self, _state):
        self.currentState = _state

    def GetToken(self):  # 현재 있는 state의 토큰 반환 ex)INTEGER, STRING ---
        if self.currentState in self.finalStates:
            return self.finalStates[self.currentState]
        else:  # 만약 현재 있는 state가 final state가 아니면 error 반환
            return "Error"

    def isFinalState(self):  # 현재 state가 final state인지 check
        if self.currentState in self.finalStates:
            return True
        else:
            return False

    def Reset(self):  # dfa reset
        self.currentState = "T0"


class SyntaxAnalyzer:

    def __init__(self):
        self.table = {}  # Transition Table 초기화
        self.currentState = "T1"  # 처음 state를 T0로 선언
        self.finalStates = {}  # Final State 선언

    def SetTransitionTable(self, dfa):  # Transition Table 세팅
        self.table = dfa["TRANSITION"]
        self.finalStates.update(dfa["ACCEPTED_STATES"])

    def CheckNextState(self, _input):  # 다음 state를 check
        if not _input in self.table[self.currentState]:  # 만약 테이블 값에 없는 input 값이 들어오면 에러 반환 후 종료
            print("error")
            exit()
        nextState = self.table[self.currentState][_input]
        if nextState == "":  # 다음 state가 rejected 상태이면 "rejected" 반환
            return "rejected"
        else:  # 나머지 경우에는 nextState 반환
            return nextState

    def GetState(self):  # 현재 state를 알려줌
        return self.currentState

    def SetState(self, _state):
        self.currentState = _state

    def isFinalState(self):  # 현재 state가 final state인지 check
        if self.currentState in self.finalStates:
            return True
        else:
            return False

    def Reset(self):  # dfa reset
        self.currentState = "T1"


def main():
    print("-------------Lexical Analyzer Start-------------")
    lexicalResultList = []
    dfa = LexicalAnalyzer()
    dfa.SetTransitionTable(DFA)
    inputString = input("Enter inputString : ")
    print("Input : {}".format(inputString))
    inputString = list(inputString)
    print("Output : ", end='')
    stringBucket = []
    tokenList = []
    while len(inputString) != 0:
        nextState = dfa.CheckNextState(inputString[0])
        if nextState == "rejected":
            if dfa.isFinalState():
                if dfa.GetToken() == "WHITESPACE":
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                if ''.join(map(str, stringBucket)) == '=' and len(inputString) > 0 and inputString[0] == '=':
                    inputString.pop(0)
                    dfa.Reset()
                    tempString = "=="
                    newNextState = dfa.CheckNextState(tempString)
                    dfa.SetState(newNextState)
                    # print("<{},{}>".format(dfa.GetToken(), tempString), end='')
                    lexicalResultList.append(dfa.GetToken().lower())
                    tokenList.append(dfa.GetToken())
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                if dfa.GetToken() == "RPAREN" or dfa.GetToken() == "LPAREN" or dfa.GetToken() == "RBRACE" or dfa.GetToken() == "LBRACE" or dfa.GetToken() == "ASSIGN" or dfa.GetToken() == "SEMI" or dfa.GetToken() == "RETURN" or dfa.GetToken() == "IF" or dfa.GetToken() == "ELSE" or dfa.GetToken() == "WHILE":
                    # print("<{}>".format(dfa.GetToken()), end='')
                    lexicalResultList.append(dfa.GetToken().lower())
                    tokenList.append(dfa.GetToken())
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                if ''.join(map(str, stringBucket)) == "int" or ''.join(map(str, stringBucket)) == "char":
                    dfa.Reset()
                    newNextState = dfa.CheckNextState(''.join(map(str, stringBucket)))
                    dfa.SetState(newNextState)
                    # print("<{},{}>".format(dfa.GetToken(), ''.join(map(str, stringBucket))), end='')
                    lexicalResultList.append(dfa.GetToken().lower())
                    tokenList.append(dfa.GetToken())
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                if ''.join(map(str, stringBucket)) == "return" or ''.join(map(str, stringBucket)) == "while" or ''.join(
                        map(str, stringBucket)) == "if" or ''.join(map(str, stringBucket)) == "else":
                    dfa.Reset()
                    newNextState = dfa.CheckNextState(''.join(map(str, stringBucket)))
                    dfa.SetState(newNextState)
                    # print("<{}>".format(dfa.GetToken()), end='')
                    lexicalResultList.append(dfa.GetToken().lower())
                    tokenList.append(dfa.GetToken())
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                if ''.join(map(str, stringBucket)) == "RETURN" or ''.join(map(str, stringBucket)) == "WHILE" or ''.join(
                        map(str, stringBucket)) == "IF" or ''.join(map(str, stringBucket)) == "ELSE":
                    dfa.Reset()
                    tempString = ''.join(map(str, stringBucket))
                    tempString = tempString.lower()
                    newNextState = dfa.CheckNextState(tempString)
                    dfa.SetState(newNextState)
                    # print("<{}>".format(dfa.GetToken()), end='')
                    lexicalResultList.append(dfa.GetToken().lower())
                    tokenList.append(dfa.GetToken())
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                if ''.join(map(str, stringBucket)) == "INT" or ''.join(map(str, stringBucket)) == "CHAR":
                    dfa.Reset()
                    tempString = ''.join(map(str, stringBucket))
                    tempString = tempString.lower()
                    newNextState = dfa.CheckNextState(tempString)
                    dfa.SetState(newNextState)
                    # print("<{}>".format(dfa.GetToken()), end='')
                    lexicalResultList.append(dfa.GetToken().lower())
                    tokenList.append(dfa.GetToken())
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                # print("<{},{}>".format(dfa.GetToken(), ''.join(map(str, stringBucket))), end='')
                if ''.join(map(str, stringBucket)) == "-" or ''.join(map(str, stringBucket)) == '+':
                    lexicalResultList.append("addsub")
                elif ''.join(map(str, stringBucket)) == "*" or ''.join(map(str, stringBucket)) == '/':
                    lexicalResultList.append("multdiv")
                else:
                    lexicalResultList.append(dfa.GetToken().lower())
                tokenList.append(dfa.GetToken())
                del stringBucket[:]
                dfa.Reset()
            else:
                print("error1")
                break
        else:
            if ''.join(map(str, stringBucket)) == '-' and tokenList[-1] != "OP" and tokenList[-1] != "ASSIGN":
                # print("<{},{}>".format(dfa.GetToken(), ''.join(map(str, stringBucket))), end='')
                lexicalResultList.append("addsub")  # 수정1
                tokenList.append(dfa.GetToken())
                del stringBucket[:]
                dfa.Reset()
            stringBucket.append(inputString.pop(0))
            dfa.SetState(nextState)
            if len(inputString) == 0:
                if dfa.GetToken() == "WHITESPACE":
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                if dfa.GetToken() == "RPAREN" or dfa.GetToken() == "LPAREN" or dfa.GetToken() == "RBRACE" or dfa.GetToken() == "LBRACE" or dfa.GetToken() == "ASSIGN" or dfa.GetToken() == "SEMI":
                    # print("<{}>".format(dfa.GetToken()), end='')
                    lexicalResultList.append(dfa.GetToken().lower())
                    tokenList.append(dfa.GetToken())
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                if ''.join(map(str, stringBucket)) == "int" or ''.join(map(str, stringBucket)) == "char":
                    dfa.Reset()
                    newNextState = dfa.CheckNextState(''.join(map(str, stringBucket)))
                    dfa.SetState(newNextState)
                    # print("<{},{}>".format(dfa.GetToken(), ''.join(map(str, stringBucket))), end='')
                    lexicalResultList.append(dfa.GetToken().lower())
                    tokenList.append(dfa.GetToken())
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                if ''.join(map(str, stringBucket)) == "return" or ''.join(map(str, stringBucket)) == "while" or ''.join(
                        map(str, stringBucket)) == "if" or ''.join(map(str, stringBucket)) == "else":
                    dfa.Reset()
                    newNextState = dfa.CheckNextState(''.join(map(str, stringBucket)))
                    dfa.SetState(newNextState)
                    # print("<{}>".format(dfa.GetToken()), end='')
                    lexicalResultList.append(dfa.GetToken().lower())
                    tokenList.append(dfa.GetToken())
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                if ''.join(map(str, stringBucket)) == "RETURN" or ''.join(map(str, stringBucket)) == "WHILE" or ''.join(
                        map(str, stringBucket)) == "IF" or ''.join(map(str, stringBucket)) == "ELSE":
                    dfa.Reset()
                    tempString = ''.join(map(str, stringBucket))
                    tempString = tempString.lower()
                    newNextState = dfa.CheckNextState(tempString)
                    dfa.SetState(newNextState)
                    # print("<{}>".format(dfa.GetToken()), end='')
                    lexicalResultList.append(dfa.GetToken().lower())
                    tokenList.append(dfa.GetToken())
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                if ''.join(map(str, stringBucket)) == "INT" or ''.join(map(str, stringBucket)) == "CHAR":
                    dfa.Reset()
                    tempString = ''.join(map(str, stringBucket))
                    tempString = tempString.lower()
                    newNextState = dfa.CheckNextState(tempString)
                    dfa.SetState(newNextState)
                    # print("<{}>".format(dfa.GetToken()), end='')
                    lexicalResultList.append(dfa.GetToken().lower())
                    tokenList.append(dfa.GetToken())
                    del stringBucket[:]
                    dfa.Reset()
                    continue
                # print("<{},{}>".format(dfa.GetToken(), ''.join(map(str, stringBucket))), end='')
                lexicalResultList.append(dfa.GetToken().lower())
                tokenList.append(dfa.GetToken())
                del stringBucket[:]
                dfa.Reset()
    lexicalResultList.append("$")
    newLexicalResultList = []
    for k in range(len(lexicalResultList)):
        if lexicalResultList[k] == "integer":
            newLexicalResultList.append("num")
        elif lexicalResultList[k] == "string":
            newLexicalResultList.append("literal")
        elif lexicalResultList[k] == "comparison":
            newLexicalResultList.append("comp")
        else:
            newLexicalResultList.append(lexicalResultList[k])
    print(newLexicalResultList)
    print("-------------Syntax Analyzer Start-------------")
    syntaxDfa = SyntaxAnalyzer()
    syntaxDfa.SetTransitionTable(SLR_TABLE)
    inputStringList = newLexicalResultList
    leftSubstring = []
    stack = [syntaxDfa.currentState]
    isAccepted = False
    while len(inputStringList) != 0:
        if syntaxDfa.CheckNextState(inputStringList[0])[0] == "S":
            stateNumber = syntaxDfa.CheckNextState(inputStringList[0])[1::]
            leftSubstring.append(inputStringList.pop(0))
            syntaxDfa.SetState("T" + str(stateNumber))
            stack.append(syntaxDfa.currentState)
        elif syntaxDfa.CheckNextState(inputStringList[0])[0] == "R":
            reduceIndex = syntaxDfa.CheckNextState(inputStringList[0])[1::]
            for k in range(ReduceLengthList[int(reduceIndex) - 1]):
                leftSubstring.pop()
                stack.pop()
            inputStringList.insert(0, ReduceStringList[int(reduceIndex) - 1])
            syntaxDfa.SetState(stack[-1])
            if inputStringList[0] == "S'":
                isAccepted = True
                break
        else:
            syntaxDfa.SetState("T" + syntaxDfa.CheckNextState(inputStringList[0]))
            leftSubstring.append(inputStringList.pop(0))
            stack.append(syntaxDfa.currentState)

    if isAccepted:
        print("ACCEPTED!")
    else:
        print("REJECTED!")


if __name__ == "__main__":
    main()
